import pytest
from copy import deepcopy
from anyblok_furetui import merge


@pytest.mark.parametrize(
    "d1,d2,expected",
    [
        (
            {"a": {"b": {"c": "d"}}},
            {"a": {"b": {"e": "f"}}},
            {"a": {"b": {"c": "d", "e": "f"}}},
        ),
        (
            {"a": {"b": {"c": "d"}}},
            {},
            {"a": {"b": {"c": "d"}}},
        ),
        (
            {},
            {"a": {"b": {"c": "d"}}},
            {"a": {"b": {"c": "d"}}},
        ),
        (
            {"a": 1},
            {"a": 2},
            {"a": 2},
        ),
        (
            {"a": 1},
            {"a": {"b": "c"}},
            {"a": {"b": "c"}},
        ),
        (
            {"a": {"b": "c"}},
            {"a": 1},
            {"a": 1},
        ),
        (
            {"a": {"b": {"c": "d"}}},
            {"a": {"c": 1}},
            {"a": {"b": {"c": "d"}, "c": 1}},
        ),
        (
            {"a": {"c": 1}},
            {"a": {"b": {"c": "d"}}},
            {"a": {"b": {"c": "d"}, "c": 1}},
        ),
        (
            {"a": {"b": {"c": "d", "e": "z", "g": "h"}}},
            {"a": {"b": {"e": "f"}}},
            {"a": {"b": {"c": "d", "e": "f", "g": "h"}}},
        ),
        (
            {"a": {"b": ["c", "d"]}},
            {"a": {"b": ["e", "f"]}},
            {"a": {"b": ["c", "d", "e", "f"]}},
        ),
        (
            {"a": {"b": ["c"]}},
            {"a": 1},
            {"a": 1},
        ),
        (
            {"a": 1},
            {"a": {"b": ["c"]}},
            {"a": {"b": ["c"]}},
        ),
        (
            {"a": {"b": {"c": "d"}}},
            {"a": {"b": ["c"]}},
            {"a": {"b": ["c"]}},
        ),
        (
            {"a": {"b": ["c"]}},
            {"a": {"b": {"c": "d"}}},
            {"a": {"b": {"c": "d"}}},
        ),
        (
            {"a": {"b": ["c"]}},
            {"a": {"c": 1}},
            {"a": {"b": ["c"], "c": 1}},
        ),
        (
            {"a": {"c": 1}},
            {"a": {"b": ["c"]}},
            {"a": {"b": ["c"], "c": 1}},
        ),
    ],
)
def test_merge(d1, d2, expected):
    copy_d1 = deepcopy(d1)
    copy_d2 = deepcopy(d2)
    assert merge(d1, d2) == expected
    assert d1 == copy_d1
    assert d2 == copy_d2
